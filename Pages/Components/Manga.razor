@page "/mangas/{id}/"
@using static Mangas
@using InputType = MudBlazor.InputType
@using Database
@using ElectronNET.API
@using ElectronNET.API.Entities
@inject ILocalStorageService localStorage
@inject IDatabase db

<MudText Typo="Typo.h3">@(manga.name ?? "Loading...")</MudText>

<div style="width: 100%; margin-top: 20px; display: grid; grid-template-columns: 1fr 2fr; margin-bottom: 10px">
    <img src="@manga.cover" style="width: 90%; box-shadow: 2px 4px 6px rgba(0,0,0,0.4)"/>
    <div>
        <MudText Typo="Typo.h5">Last read: @manga.lastread</MudText>
        <MudTextField Label="Base Url" Style="width: 70%" TextChanged="@BaseUrlChanged" @bind-Value="@manga.baseurl" InputType="InputType.Text" T="string"></MudTextField>
        @if (!volumeOK)
        {
            <MudAlert Style="margin-top:10px; width: 70%" Severity="Severity.Error">Volume parameter must be set!</MudAlert>
        }
        
        @if (!pageOK)
        {
            <MudAlert Style="margin-top:10px;width: 70%" Severity="Severity.Error">Page parameter must be set!</MudAlert>
        }
        <br/>
        <MudTextField Style="width: 70%" Label="Cover Url" TextChanged="@(()=>db.SaveManga(manga))" @bind-Value="@manga.cover" InputType="InputType.Text" T="string"></MudTextField>
        <br/>
        <MudItem Style="display: flex">
            <MudItem xs="2" Style="margin-right: 10px; margin-bottom: 20px">
                <MudTextField Label="Volume" Variant="Variant.Outlined" Margin="Margin.Dense" T="int" InputType="InputType.Number" Style="text-align: center"></MudTextField>
            </MudItem>
            
            <MudItem>
                <MudButton EndIcon="@Icons.Filled.FileDownload" Variant="Variant.Filled" Size="MudBlazor.Size.Large" Color="Color.Primary">Download</MudButton>
            </MudItem>
            
            <MudItem>
                <MudTooltip Text=@(manga.download_folder == "" ? "Select output path" : "Current output path "+manga.download_folder)>
                    <MudIconButton OnClick="@OpenDialog" Icon="@Icons.Filled.FolderOpen"></MudIconButton>
                </MudTooltip>

            </MudItem>
        </MudItem>
        <div style="width: 70%">
            <MudExpansionPanels Elevation="3">
                <MudExpansionPanel Style="width: 70%" IsExpanded="true">
                    <TitleContent>
                        <div class="d-flex" style="width: 70%">
                            <MudIcon Icon="@Icons.Material.Filled.Settings" class="mr-3"></MudIcon>
                            <MudText><strong>Download Options</strong></MudText>
                        </div>
                    </TitleContent>
                    <ChildContent>
                        <MudGrid>
                            
                            <MudItem xs="3">
                                <MudTextField HelperText="Ex: 0-100" Label="Page range" T="string" Style="text-align: center"></MudTextField>
                            </MudItem>
                            
                            
                        </MudGrid>
                    </ChildContent>
                </MudExpansionPanel>
                
                <MudExpansionPanel Style="width: 70%" IsExpanded="false">
                    <TitleContent>
                        <div class="d-flex" style="width: 70%">
                            <MudIcon Icon="@Icons.Material.Filled.Archive" class="mr-3"></MudIcon>
                            <MudText><strong>Downloaded Content</strong></MudText>
                        </div>
                    </TitleContent>
                    <ChildContent>
                        Panel Content
                    </ChildContent>
                </MudExpansionPanel>
            </MudExpansionPanels>
        </div>
    </div>
</div>
<MudTooltip Text="To enable fast download, please download at least once." Placement="Placement.End" Delayed="1">
    <MudButton EndIcon="@Icons.Filled.FlashOn" Variant="Variant.Filled" Size="MudBlazor.Size.Large" Disabled="@fastdownload" Color="Color.Primary">Fast Download</MudButton>
</MudTooltip>

@code{

    [Parameter]
    public string id { get; set; } = "";

    bool fastdownload = true;
    bool volumeOK = false;
    bool pageOK = false;

    public DataManga manga = new DataManga();

    async void BaseUrlChanged()
    {
        if (manga.baseurl.ToLower().Contains("[volume]"))
        {
            volumeOK = true;
            await InvokeAsync(StateHasChanged);
        }
        else volumeOK = false;
        if (manga.baseurl.ToLower().Contains("[page]"))
        {
            pageOK = true;
            await InvokeAsync(StateHasChanged);
        }
        else pageOK = false;

        db.SaveManga(manga);

    }

    async void OpenDialog()
    {
        var mainWindow = Electron.WindowManager.BrowserWindows.First();
        var options = new OpenDialogOptions
        {
            Properties = new OpenDialogProperty[] {
                OpenDialogProperty.openDirectory
            }
        };
        string path = Electron.Dialog.ShowOpenDialogAsync(mainWindow, options).Result[0];
        manga.download_folder = path;
        db.SaveManga(manga);
    }

    //void CoverUrlChanged() => Save();
    

    protected override async void OnInitialized()
    {
        db.SetLocalStorage(localStorage);
        manga = await db.GetManga(id ?? "00000000000");
        await InvokeAsync(() => StateHasChanged());
        base.OnInitialized();
    }

}