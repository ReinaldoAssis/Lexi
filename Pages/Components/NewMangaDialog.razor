@using Newtonsoft.Json.Linq
@using Newtonsoft.Json
@inject Blazored.LocalStorage.ILocalStorageService localStorage

<MudGrid Style="padding: 15px">
    <MudItem xs="12">
        <MudTextField @bind-Value="name" Label="Name" Variant="Variant.Outlined"></MudTextField>
    </MudItem>
    
    <MudItem xs="12">
        <MudTextField @bind-Value="baseurl" Label="Baseurl" Variant="Variant.Outlined"></MudTextField>
    </MudItem>
    
    <MudItem xs="12">
        <MudTextField @bind-Value="cover" Label="Cover url" Variant="Variant.Outlined"></MudTextField>
    </MudItem>
    
    <MudItem xs="12">
        <div style="display: flex">
            <MudButton OnClick="Cancel" Color="Color.Error" Style="margin-right: 15px">Cancel</MudButton>
            <MudButton OnClick="Okay" Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Save" Color="Color.Primary"  Size="Size.Large">Add</MudButton>
        </div>
    </MudItem>
</MudGrid>

@code{

    [CascadingParameter] MudDialogInstance dialog { get; set; }
    public String name;
    public String baseurl;
    public String cover;

    DataBase database;

    protected override async void OnInitialized()
    {
        database = new DataBase(localStorage);
        base.OnInitialized();
    }

    async void Okay()
    {

        //reads from DB and checks if list of mangas exists, if it does not, creates a new list
        List<Mangas.DataManga> listMangas = await database.Read<List<Mangas.DataManga>>("mangas") ?? new List<Mangas.DataManga>();

        //appends the new manga to the database variable and serializes it
        //await database.Write(name, listMangas.Append(new Mangas.DataManga(name,baseurl,cover)));
        await localStorage.SetItemAsync("mangas", listMangas.Append(new Mangas.DataManga(name, baseurl, cover)));

        dialog.Close(DialogResult.Ok(true)); //closes the dialog with result OK
    }
    void Cancel() => dialog.Close(DialogResult.Cancel());


}