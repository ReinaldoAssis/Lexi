@page "/mangas"
@using OpenManga.Pages.Components
@using System.Text.RegularExpressions
@inject IDialogService DialogService
@inject ILocalStorageService localStorage

<style>
    .manga{
        transition-duration: 0.3s;
    }
    
    .manga:hover{
        transition-duration: 0.3s;
        transform: scale(1.05);
    }
</style>

<MudText Typo="Typo.h3"><b>Mangas</b></MudText>
<MudGrid Style="margin-left: 20px">
    @foreach (DataManga item in mangas)
    {
            <div class="manga" Style="max-height: 600px; margin-right: 12px; margin-left: 12px; max-width: 250px; margin-top: 50px">
                <MudItem Class="d-flex align-center justify-center" Style="margin-top: 10px; max-width: 300px;" xs="3">
                    <MudCard Elevation="3">
                        <a href="@($"mangas/{item.id}")">
                            <MudCardMedia Image="@(item.cover)" Height="200"/>
                            <MudCardContent Style="padding-right: 60px">
                                <MudText Style="font-size: 110%" Typo="Typo.h5"><b>@(item.name.Length <= 17 ? item.name : item.name.Substring(0,17)+"...")</b></MudText>
                                @* <MudText Typo="Typo.body2">There isn't a description yet.</MudText> *@
                                <MudText Typo="Typo.body2">Last downloaded: V10</MudText>
                            </MudCardContent>
                        </a>
                        
                        <MudCardActions>
                            <MudButton Variant="Variant.Text" Color="Color.Primary" Link="/mangas/magi">Download</MudButton>
                            <MudButton Variant="Variant.Text" Color="Color.Primary">Edit</MudButton>
                        </MudCardActions>
                    </MudCard>
                </MudItem>
            </div>
    }
    <MudItem xs="3" Style="display: flex;">
        <MudFab OnClick="@((e) => CreateNewManga())" Style="align-self: center; position: relative" Color="Color.Primary" Icon="@Icons.Material.Filled.Add" aria-label="add" />
    </MudItem>

    
</MudGrid>

@code{

    public partial class DataManga
    {
        public string name { get; set; }
        public string baseurl { get; set; }
        public string cover { get; set; }
        public int lastread { get; set; } = 0;
        public string id { get; set; } = null;
        public string download_folder { get; set; } = "";
        public string download_PageRange { get; set; } = null;
        public string download_Repeat { get; set; } = null;
        public string img_class { get; set; } = null;
        public string img_NumberFormat { get; set; } = null;
        public string volume_NumberFormat { get; set; } = null;
        public PageIdentifier pageIdentifier { get; set; }

        public class PageIdentifier
        {
            public string IdentifierHtmlClass { get; set; }
            public List<int> ParsedNumbers { get; set; }
            public int StartPage { get; set; }
            public int EndPage { get; set; }

            public List<int> ParseNumbers(string requestResult)
            {
                List<int> ints = new List<int>();
                Regex rgx = new Regex("[^0-9-/]");
                foreach (var c in rgx.Replace(requestResult, "").ToArray())
                {
                    ints.Add(int.Parse(c+""));
                }
                ParsedNumbers = ints;
                return ints;
            }

            public int[] GetPageRange()
            {
                ParsedNumbers.Sort();
                StartPage = ParsedNumbers[0];
                EndPage = ParsedNumbers[1];
                return new []{ParsedNumbers[0],ParsedNumbers[1]};
            }
        }
        
        public DataManga(){}

        public DataManga(string _name, string _baseurl, string _cover)
        {
            name = _name;
            baseurl = _baseurl;
            cover = _cover;
        }

        public override string ToString()
        {
            return name + " " + baseurl + " " + cover;
        }
    }

    List<DataManga> mangas = new List<DataManga>();

    protected override async void OnInitialized()
    {
        //reads mangas list from DB, if it does not exists, creates a new empty one
        mangas = await localStorage.GetItemAsync<List<DataManga>>("mangas") ?? new List<DataManga>();
        await InvokeAsync(() => StateHasChanged());

        base.OnInitialized();
    }

    async void CreateNewManga()
    {
        var dialog =  await DialogService.Show<NewMangaDialog>("Add new manga").Result;
        if (!dialog.Cancelled) await InvokeAsync(StateHasChanged);
    }

}